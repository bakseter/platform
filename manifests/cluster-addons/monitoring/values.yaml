k8s-monitoring:
  cluster:
    name: meta-monitoring-tutorial

  destinations:
    - name: loki
      type: loki
      url: http://monitoring-loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push

  clusterEvents:
    enabled: true
    collector: alloy-logs
  #   namespaces:
  #     - meta
  #     - prod

  nodeLogs:
    enabled: false

  podLogs:
    enabled: true
    gatherMethod: kubernetesApi
    collector: alloy-logs
    labelsToKeep:
      [
        'app_kubernetes_io_name',
        'container',
        'instance',
        'job',
        'level',
        'namespace',
        'service_name',
        'service_namespace',
        'deployment_environment',
        'deployment_environment_name',
      ]
    structuredMetadata:
      pod: pod # Set structured metadata "pod" from label "pod"
  #   namespaces:
  #     - meta
  #     - prod

  # Collectors
  alloy-singleton:
    enabled: false

  alloy-metrics:
    enabled: false

  alloy-logs:
    enabled: true
    # Required when using the Kubernetes API to pod logs
    alloy:
      mounts:
        varlog: false
      clustering:
        enabled: true

  alloy-profiles:
    enabled: false

  alloy-receiver:
    enabled: false

loki:
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: 2024-04-01
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    ingester:
      chunk_encoding: snappy
    tracing:
      enabled: true
    pattern_ingester:
      enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
    ruler:
      enable_api: true
    querier:
      # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
      max_concurrent: 4

  minio:
    enabled: true

  lokiCanary:
    enabled: false

  chunksCache:
    enabled: false

  resultsCache:
    enabled: false

  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1
    resources:
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 2
        memory: 2Gi
    extraEnv:
      # Keep a little bit lower than memory limits
      - name: GOMEMLIMIT
        value: 3750MiB

  chunksCache:
    # default is 500MB, with limited memory keep this smaller
    writebackSizeLimit: 10MB

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

grafana:
  # persistence:
  #   type: pvc
  #   enabled: true

  admin:
    existingSecret: 'grafana-admin-secret'
    userKey: admin-user
    passwordKey: admin-password

  service:
    enabled: true
    type: ClusterIP

  ingress:
    enabled: true
    hosts:
      - grafana.bakseter.net
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.bakseter.net

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://monitoring-loki-gateway.monitoring.svc.cluster.local:80
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
